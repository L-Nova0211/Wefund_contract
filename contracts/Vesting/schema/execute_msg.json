{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "set_config"
      ],
      "properties": {
        "set_config": {
          "type": "object",
          "required": [
            "admin"
          ],
          "properties": {
            "admin": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_project"
      ],
      "properties": {
        "add_project": {
          "type": "object",
          "required": [
            "admin",
            "project_id",
            "start_time",
            "token_addr"
          ],
          "properties": {
            "admin": {
              "type": "string"
            },
            "project_id": {
              "$ref": "#/definitions/Uint128"
            },
            "start_time": {
              "$ref": "#/definitions/Uint128"
            },
            "token_addr": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_project_info"
      ],
      "properties": {
        "set_project_info": {
          "type": "object",
          "required": [
            "project_id",
            "project_info"
          ],
          "properties": {
            "project_id": {
              "$ref": "#/definitions/Uint128"
            },
            "project_info": {
              "$ref": "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_project_config"
      ],
      "properties": {
        "set_project_config": {
          "type": "object",
          "required": [
            "admin",
            "project_id",
            "start_time",
            "token_addr"
          ],
          "properties": {
            "admin": {
              "type": "string"
            },
            "project_id": {
              "$ref": "#/definitions/Uint128"
            },
            "start_time": {
              "$ref": "#/definitions/Uint128"
            },
            "token_addr": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_vesting_parameters"
      ],
      "properties": {
        "set_vesting_parameters": {
          "type": "object",
          "required": [
            "params",
            "project_id"
          ],
          "properties": {
            "params": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VestingParameter"
              }
            },
            "project_id": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_seed_users"
      ],
      "properties": {
        "set_seed_users": {
          "type": "object",
          "required": [
            "project_id",
            "user_infos"
          ],
          "properties": {
            "project_id": {
              "$ref": "#/definitions/Uint128"
            },
            "user_infos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserInfo"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_seed_user"
      ],
      "properties": {
        "add_seed_user": {
          "type": "object",
          "required": [
            "amount",
            "project_id",
            "wallet"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "project_id": {
              "$ref": "#/definitions/Uint128"
            },
            "wallet": {
              "$ref": "#/definitions/Addr"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_presale_users"
      ],
      "properties": {
        "set_presale_users": {
          "type": "object",
          "required": [
            "project_id",
            "user_infos"
          ],
          "properties": {
            "project_id": {
              "$ref": "#/definitions/Uint128"
            },
            "user_infos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserInfo"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_presale_user"
      ],
      "properties": {
        "add_presale_user": {
          "type": "object",
          "required": [
            "amount",
            "project_id",
            "wallet"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "project_id": {
              "$ref": "#/definitions/Uint128"
            },
            "wallet": {
              "$ref": "#/definitions/Addr"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_i_d_o_users"
      ],
      "properties": {
        "set_i_d_o_users": {
          "type": "object",
          "required": [
            "project_id",
            "user_infos"
          ],
          "properties": {
            "project_id": {
              "$ref": "#/definitions/Uint128"
            },
            "user_infos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserInfo"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_i_d_o_user"
      ],
      "properties": {
        "add_i_d_o_user": {
          "type": "object",
          "required": [
            "amount",
            "project_id",
            "wallet"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "project_id": {
              "$ref": "#/definitions/Uint128"
            },
            "wallet": {
              "$ref": "#/definitions/Addr"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "claim_pending_tokens"
      ],
      "properties": {
        "claim_pending_tokens": {
          "type": "object",
          "required": [
            "project_id"
          ],
          "properties": {
            "project_id": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Addr": {
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    },
    "Config": {
      "type": "object",
      "required": [
        "owner",
        "start_time",
        "token_addr"
      ],
      "properties": {
        "owner": {
          "$ref": "#/definitions/Addr"
        },
        "start_time": {
          "$ref": "#/definitions/Uint128"
        },
        "token_addr": {
          "type": "string"
        }
      }
    },
    "ProjectInfo": {
      "type": "object",
      "required": [
        "config",
        "ido_users",
        "presale_users",
        "project_id",
        "seed_users",
        "vest_param"
      ],
      "properties": {
        "config": {
          "$ref": "#/definitions/Config"
        },
        "ido_users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInfo"
          }
        },
        "presale_users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInfo"
          }
        },
        "project_id": {
          "$ref": "#/definitions/Uint128"
        },
        "seed_users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInfo"
          }
        },
        "vest_param": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VestingParameter"
          }
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "UserInfo": {
      "type": "object",
      "required": [
        "pending_amount",
        "released_amount",
        "total_amount",
        "wallet_address"
      ],
      "properties": {
        "pending_amount": {
          "$ref": "#/definitions/Uint128"
        },
        "released_amount": {
          "$ref": "#/definitions/Uint128"
        },
        "total_amount": {
          "$ref": "#/definitions/Uint128"
        },
        "wallet_address": {
          "$ref": "#/definitions/Addr"
        }
      }
    },
    "VestingParameter": {
      "type": "object",
      "required": [
        "after",
        "period",
        "soon"
      ],
      "properties": {
        "after": {
          "$ref": "#/definitions/Uint128"
        },
        "period": {
          "$ref": "#/definitions/Uint128"
        },
        "soon": {
          "$ref": "#/definitions/Uint128"
        }
      }
    }
  }
}
